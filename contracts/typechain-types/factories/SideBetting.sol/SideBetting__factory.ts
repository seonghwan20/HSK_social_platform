/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SideBetting,
  SideBettingInterface,
} from "../../SideBetting.sol/SideBetting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_faucetAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "playerChoice",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameResultSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newHouseEdge",
        type: "uint256",
      },
    ],
    name: "HouseEdgeUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bets",
    outputs: [
      {
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerChoice",
        type: "address",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerChoice",
        type: "address",
      },
    ],
    name: "calculateOdds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "betIndices",
        type: "uint256[]",
      },
    ],
    name: "claimWinnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "createGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetContract",
    outputs: [
      {
        internalType: "contract IFaucet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "resultSet",
        type: "bool",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "payoutComplete",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameStats",
    outputs: [
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "resultSet",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "player1BetAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "player2BetAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "houseEdge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerChoice",
        type: "address",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerTotalBets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "setGameResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFaucetAddress",
        type: "address",
      },
    ],
    name: "updateFaucetContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newHouseEdge",
        type: "uint256",
      },
    ],
    name: "updateHouseEdge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "withdrawHouseFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260fa60055534801561001557600080fd5b5060405161183338038061183383398101604081905261003491610062565b600080546001600160a01b039092166001600160a01b03199283161790556001805490911633179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b611792806100a16000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063d667dcd711610064578063d667dcd71461037a578063d7fbbf9a14610390578063f2fde38b146103b0578063f39126a9146103d0578063fdcdaeb4146103f057600080fd5b80638da5cb5b146102ef5780639c70b17f14610327578063a93f7e0b14610347578063bc1b60621461036757600080fd5b806348e837b9116100dc57806348e837b9146102095780636a09f6be146102295780636f9fb98a1461027e57806373f3fe9f146102a157806387c13943146102d957600080fd5b8063117a5b901461010e578063243b22cf146101a75780632ae17c4b146101c95780633684c2b0146101e9575b600080fd5b34801561011a57600080fd5b506101686101293660046114b0565b60036020526000908152604090208054600182015460029092015460ff8083169361010084048216936201000090046001600160a01b03169290911685565b60408051951515865293151560208601526001600160a01b039092169284019290925260608301919091521515608082015260a0015b60405180910390f35b3480156101b357600080fd5b506101c76101c23660046114b0565b610446565b005b3480156101d557600080fd5b506101c76101e43660046114b0565b610658565b3480156101f557600080fd5b506101c76102043660046114c9565b610704565b34801561021557600080fd5b506101c76102243660046114b0565b610a26565b34801561023557600080fd5b50610249610244366004611548565b610b71565b60405161019e94939291906001600160a01b039485168152602081019390935292166040820152901515606082015260800190565b34801561028a57600080fd5b50610293610bca565b60405190815260200161019e565b3480156102ad57600080fd5b506102936102bc366004611582565b600460209081526000928352604080842090915290825290205481565b3480156102e557600080fd5b5061029361271081565b3480156102fb57600080fd5b5060015461030f906001600160a01b031681565b6040516001600160a01b03909116815260200161019e565b34801561033357600080fd5b50610293610342366004611582565b610bfc565b34801561035357600080fd5b506101c76103623660046114b0565b610ce2565b6101c7610375366004611582565b610e89565b34801561038657600080fd5b5061029360055481565b34801561039c57600080fd5b5060005461030f906001600160a01b031681565b3480156103bc57600080fd5b506101c76103cb3660046115b2565b61124d565b3480156103dc57600080fd5b506101c76103eb3660046115b2565b6112ef565b3480156103fc57600080fd5b5061041061040b3660046114b0565b6113a3565b604080519586526001600160a01b039094166020860152911515928401929092526060830191909152608082015260a00161019e565b6001546001600160a01b031633146104795760405162461bcd60e51b8152600401610470906115d6565b60405180910390fd5b600081815260036020526040902054819060ff166104a95760405162461bcd60e51b815260040161047090611617565b600082815260036020526040902054610100900460ff16156105075760405162461bcd60e51b815260206004820152601760248201527611d85b59481c995cdd5b1d08185b1c9958591e481cd95d604a1b6044820152606401610470565b60008060009054906101000a90046001600160a01b03166001600160a01b031663b3fb14ad6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190611644565b90506001600160a01b0381166105d75760405162461bcd60e51b815260206004820152601d60248201527f57696e6e65722063616e6e6f74206265207a65726f20616464726573730000006044820152606401610470565b6000838152600360205260409081902080546001600160a01b0384166201000002610100600160b01b0319909116176101001790555183907fe21bf418606cb57a2ee0e792590149d9299236e148ff0550548a1957fa9d69ee9061064b9084906001600160a01b0391909116815260200190565b60405180910390a2505050565b6001546001600160a01b031633146106825760405162461bcd60e51b8152600401610470906115d6565b61271081106106c95760405162461bcd60e51b8152602060048201526013602482015272090deeae6ca40cac8ceca40e8dede40d0d2ced606b1b6044820152606401610470565b60058190556040518181527f5082c314f0d5d410c0175820fe02f58a21198fde20ddb6e65c96825cadab67a89060200160405180910390a150565b600083815260036020526040902054839060ff166107345760405162461bcd60e51b815260040161047090611617565b600084815260036020526040902054610100900460ff166107915760405162461bcd60e51b815260206004820152601760248201527611d85b59481c995cdd5b1d081b9bdd081cd95d081e595d604a1b6044820152606401610470565b6000848152600360205260408120546201000090046001600160a01b031690805b848110156109715760008686838181106107ce576107ce611661565b60008b81526002602090815260409091205491029290920135925050811061082c5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840c4cae840d2dcc8caf607b1b6044820152606401610470565b600088815260026020526040812080548390811061084c5761084c611661565b6000918252602090912060039091020180549091506001600160a01b031633146108a75760405162461bcd60e51b815260206004820152600c60248201526b139bdd081e5bdd5c8818995d60a21b6044820152606401610470565b6002810154600160a01b900460ff16156108f55760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610470565b60028101546001600160a01b0380871691160361094a5760006109188a87610bfc565b9050600061271082846001015461092f919061168d565b61093991906116aa565b905061094581876116cc565b955050505b600201805460ff60a01b1916600160a01b1790555080610969816116df565b9150506107b2565b50600081116109b95760405162461bcd60e51b81526020600482015260146024820152734e6f2077696e6e696e677320746f20636c61696d60601b6044820152606401610470565b604051339082156108fc029083906000818181858888f193505050501580156109e6573d6000803e3d6000fd5b50604051818152339087907fad65ef4ba28f4ce1aaee7e8f86645eb4ce0ddc8b6c8fa2821564a94dbd2485fe9060200160405180910390a3505050505050565b6001546001600160a01b03163314610a505760405162461bcd60e51b8152600401610470906115d6565b60008181526003602052604090205460ff1615610aa55760405162461bcd60e51b815260206004820152601360248201527247616d6520616c72656164792065786973747360681b6044820152606401610470565b6040805160a08101825260018082526000602080840182815284860183815260608601848152608087018581528986526003909452878520965187549351925161ffff1990941690151561ff00191617610100921515929092029190911762010000600160b01b031916620100006001600160a01b0390931692909202919091178555519284019290925590516002909201805460ff191692151592909217909155905182917fbd19c47e9925eb6f7be8bb1c13a841e0240aaeaf17f217e90022e9c8eb66877f91a250565b60026020528160005260406000208181548110610b8d57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b039182169450919250811690600160a01b900460ff1684565b6001546000906001600160a01b03163314610bf75760405162461bcd60e51b8152600401610470906115d6565b504790565b600082815260036020526040812054839060ff16610c2c5760405162461bcd60e51b815260040161047090611617565b6000848152600360205260408120600101549003610c4d5760009150610cdb565b60008481526004602090815260408083206001600160a01b038716845290915281205490819003610c82576000925050610cdb565b6000612710600554612710610c9791906116f8565b600088815260036020526040902060010154610cb3919061168d565b610cbd91906116aa565b905081610ccc6127108361168d565b610cd691906116aa565b935050505b5092915050565b6001546001600160a01b03163314610d0c5760405162461bcd60e51b8152600401610470906115d6565b600081815260036020526040902054819060ff16610d3c5760405162461bcd60e51b815260040161047090611617565b600082815260036020526040902054610100900460ff16610d995760405162461bcd60e51b815260206004820152601760248201527611d85b59481c995cdd5b1d081b9bdd081cd95d081e595d604a1b6044820152606401610470565b60008281526003602052604090206002015460ff1615610dfb5760405162461bcd60e51b815260206004820152601c60248201527f486f757365206665657320616c72656164792077697468647261776e000000006044820152606401610470565b60008281526003602052604081206001015460055490919061271090610e21908461168d565b610e2b91906116aa565b600085815260036020526040808220600201805460ff191660019081179091555490519293506001600160a01b03169183156108fc0291849190818181858888f19350505050158015610e82573d6000803e3d6000fd5b5050505050565b600082815260036020526040902054829060ff16610eb95760405162461bcd60e51b815260040161047090611617565b60003411610f135760405162461bcd60e51b815260206004820152602160248201527f42657420616d6f756e74206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610470565b600083815260036020526040902054610100900460ff1615610f715760405162461bcd60e51b815260206004820152601760248201527611d85b59481c995cdd5b1d08185b1c9958591e481cd95d604a1b6044820152606401610470565b60008054906101000a90046001600160a01b03166001600160a01b031663382396ee6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe6919061170b565b6110295760405162461bcd60e51b815260206004820152601460248201527311d85b59481b9bdd081a5b9a5d1a585b1a5e995960621b6044820152606401610470565b60008054604080516322d6e73360e21b8152815184936001600160a01b031692638b5b9ccc92600480820193918290030181865afa15801561106f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611093919061172d565b91509150816001600160a01b0316846001600160a01b031614806110c85750806001600160a01b0316846001600160a01b0316145b61110c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420706c617965722063686f69636560581b6044820152606401610470565b60008581526002602081815260408084208151608081018352338152348185018181526001600160a01b038c8116848701908152606085018a8152865460018181018955978c52898c209651600391820290970180549785166001600160a01b0319909816979097178755935186880155905194909801805498511515600160a01b026001600160a81b03199099169490911693909317969096179091558a8652939092528320018054919290916111c59084906116cc565b909155505060008581526004602090815260408083206001600160a01b0388168452909152812080543492906111fc9084906116cc565b9091555050604080516001600160a01b0386168152346020820152339187917f4108a54a721949460b35685fb714a531f3002d5f831f59a7c8214f72a054e4d2910160405180910390a35050505050565b6001546001600160a01b031633146112775760405162461bcd60e51b8152600401610470906115d6565b6001600160a01b0381166112cd5760405162461bcd60e51b815260206004820181905260248201527f4e6577206f776e65722063616e6e6f74206265207a65726f20616464726573736044820152606401610470565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146113195760405162461bcd60e51b8152600401610470906115d6565b6001600160a01b0381166113815760405162461bcd60e51b815260206004820152602960248201527f4e65772066617563657420616464726573732063616e6e6f74206265207a65726044820152686f206164647265737360b81b6064820152608401610470565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600360205260408120548190819081908190869060ff166113db5760405162461bcd60e51b815260040161047090611617565b60008054604080516322d6e73360e21b8152815184936001600160a01b031692638b5b9ccc92600480820193918290030181865afa158015611421573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611445919061172d565b60008b815260036020908152604080832060018101549054600484528285206001600160a01b039788168652808552838620549688168652909352922054919b5062010000810493909316995060ff6101009093049290921697509550935050505091939590929450565b6000602082840312156114c257600080fd5b5035919050565b6000806000604084860312156114de57600080fd5b83359250602084013567ffffffffffffffff808211156114fd57600080fd5b818601915086601f83011261151157600080fd5b81358181111561152057600080fd5b8760208260051b850101111561153557600080fd5b6020830194508093505050509250925092565b6000806040838503121561155b57600080fd5b50508035926020909101359150565b6001600160a01b038116811461157f57600080fd5b50565b6000806040838503121561159557600080fd5b8235915060208301356115a78161156a565b809150509250929050565b6000602082840312156115c457600080fd5b81356115cf8161156a565b9392505050565b60208082526021908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6040820152603760f91b606082015260800190565b60208082526013908201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b60006020828403121561165657600080fd5b81516115cf8161156a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176116a4576116a4611677565b92915050565b6000826116c757634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156116a4576116a4611677565b6000600182016116f1576116f1611677565b5060010190565b818103818111156116a4576116a4611677565b60006020828403121561171d57600080fd5b815180151581146115cf57600080fd5b6000806040838503121561174057600080fd5b825161174b8161156a565b60208401519092506115a78161156a56fea264697066735822122064075af66681f1e8b67223a3b40e6be8418f35ccfade83db732914986e5e1c2964736f6c63430008140033";

type SideBettingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SideBettingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SideBetting__factory extends ContractFactory {
  constructor(...args: SideBettingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _faucetAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_faucetAddress, overrides || {});
  }
  override deploy(
    _faucetAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_faucetAddress, overrides || {}) as Promise<
      SideBetting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SideBetting__factory {
    return super.connect(runner) as SideBetting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SideBettingInterface {
    return new Interface(_abi) as SideBettingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SideBetting {
    return new Contract(address, _abi, runner) as unknown as SideBetting;
  }
}
