/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Faucet, FaucetInterface } from "../Faucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_player1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_player2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumCommittee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "CommitteeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "GameCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "GameFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPot",
        type: "uint256",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "MinimumCommitteeMet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "VotingPhaseStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "FundGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMember",
        type: "address",
      },
    ],
    name: "addCommittee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "betAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkGameStatus",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "committeeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "committeeList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameStatus",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "inVotingPhase",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentCommitteeCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredCommitteeCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeRemaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isVotingPhase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumCommittee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_durationInDays",
        type: "uint8",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012ea380380620012ea833981016040819052620000349162000281565b6001600160a01b038416620000905760405162461bcd60e51b815260206004820152601e60248201527f506c61796572312063616e6e6f74206265207a65726f2061646472657373000060448201526064015b60405180910390fd5b6001600160a01b038316620000e85760405162461bcd60e51b815260206004820152601e60248201527f506c61796572322063616e6e6f74206265207a65726f20616464726573730000604482015260640162000087565b826001600160a01b0316846001600160a01b0316036200014b5760405162461bcd60e51b815260206004820152601960248201527f506c6179657273206d75737420626520646966666572656e7400000000000000604482015260640162000087565b60008211620001a95760405162461bcd60e51b8152602060048201526024808201527f42657420616d6f756e74206d7573742062652067726561746572207468616e206044820152637a65726f60e01b606482015260840162000087565b600081116200020f5760405162461bcd60e51b815260206004820152602b60248201527f4d696e696d756d20636f6d6d6974746565206d7573742062652067726561746560448201526a72207468616e207a65726f60a81b606482015260840162000087565b600080546001600160a01b039586166001600160a01b03199182161790915560018054949095169316929092179092556002919091556003556007805460ff19908116909155600580549091169055620002c9565b80516001600160a01b03811681146200027c57600080fd5b919050565b600080600080608085870312156200029857600080fd5b620002a38562000264565b9350620002b36020860162000264565b6040860151606090960151949790965092505050565b61101180620002d96000396000f3fe6080604052600436106101145760003560e01c8063aba0e189116100a0578063d84c1ac911610064578063d84c1ac914610339578063e45d3bc41461034e578063e6ab607914610364578063f020044f14610384578063f2c956111461039e57600080fd5b8063aba0e189146102c3578063d21af768146102e5578063d24257c0146102fb578063d30895e414610311578063d8431b1d1461033157600080fd5b8063382396ee116100e7578063382396ee146101c057806359a5f12d146102125780638924ff3c1461024a5780638b5b9ccc146102605780639fa18d6a1461029357600080fd5b80630b947b88146101195780631d0504a8146101435780632e1a7d4d1461017e57806338046217146101a0575b600080fd5b34801561012557600080fd5b5061012e6103b8565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b5061017061015e366004610df9565b60086020526000908152604090205481565b60405190815260200161013a565b34801561018a57600080fd5b5061019e610199366004610e29565b6103e2565b005b3480156101ac57600080fd5b5061019e6101bb366004610df9565b610490565b3480156101cc57600080fd5b506101d561072b565b6040805197151588529515156020880152931515948601949094526060850191909152608084015260a083019190915260c082015260e00161013a565b34801561021e57600080fd5b50600154610232906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b34801561025657600080fd5b5061017060065481565b34801561026c57600080fd5b50600054600154604080516001600160a01b0393841681529290911660208301520161013a565b34801561029f57600080fd5b5061012e6102ae366004610df9565b60096020526000908152604090205460ff1681565b3480156102cf57600080fd5b506102d8610783565b60405161013a9190610e42565b3480156102f157600080fd5b5061017060045481565b34801561030757600080fd5b5061017060025481565b34801561031d57600080fd5b50600054610232906001600160a01b031681565b61019e610890565b34801561034557600080fd5b5061019e610955565b34801561035a57600080fd5b5061017060035481565b34801561037057600080fd5b5061019e61037f366004610e90565b610a4f565b34801561039057600080fd5b5060075461012e9060ff1681565b3480156103aa57600080fd5b5060055461012e9060ff1681565b60075460009060ff1680156103cf575060055460ff165b80156103dd57506006544210155b905090565b3360009081526008602052604090205481111561043b5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064015b60405180910390fd5b336000908152600860205260408120805483929061045a908490610ec9565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561048c573d6000803e3d6000fd5b5050565b60075460ff166104d45760405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b6044820152606401610432565b600654421061051d5760405162461bcd60e51b815260206004820152601560248201527411d85b59481c195c9a5bd9081a185cc8195b991959605a1b6044820152606401610432565b6001600160a01b03811660009081526009602052604090205460ff16156105865760405162461bcd60e51b815260206004820152601b60248201527f4d656d62657220616c726561647920696e20636f6d6d697474656500000000006044820152606401610432565b6001600160a01b0381166105dc5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420616464207a65726f20616464726573730000000000000000006044820152606401610432565b6000546001600160a01b0382811691161480159061060857506001546001600160a01b03828116911614155b6106605760405162461bcd60e51b815260206004820152602360248201527f506c61796572732063616e6e6f7420626520636f6d6d6974746565206d656d6260448201526265727360e81b6064820152608401610432565b6001600460008282546106739190610ee2565b90915550506001600160a01b038116600081815260096020526040808220805460ff19166001179055517f3d7ec2a7591efbf272e92f356bd60d86a31605d6f50bf19ba8751ce307965a849190a2600354600454101580156106d8575060055460ff16155b15610728576005805460ff191660011790556004546040517fca914bc60602ecbde34c08269fa7ecfcc5195de5ac754213d0665ca35a0d8fe99161071f9190815260200190565b60405180910390a15b50565b60075460055460ff91821691166000808080806107466103b8565b9450600654935060045492506003549150600654421015610776574260065461076f9190610ec9565b905061077a565b5060005b90919293949596565b60075460609060ff166107ba575060408051808201909152600f81526e47616d65206e6f742061637469766560881b602082015290565b60065442101561080a5760055460ff166107ec576040518060600160405280602a8152602001610f90602a9139905090565b604051806060016040528060228152602001610fba60229139905090565b6003546004541015610872576108546040518060400160405280601e81526020017f496e73756666696369656e7420636f6d6d6974746565206d656d626572730000815250610d51565b6040518060600160405280602e8152602001610f62602e9139905090565b6040518060600160405280602e8152602001610f34602e9139905090565b60025434146108fa5760405162461bcd60e51b815260206004820152603060248201527f4465706f73697420616d6f756e74206d7573742065786163746c79206d61746360448201526f1a081d1a194818995d08185b5bdd5b9d60821b6064820152608401610432565b3360009081526008602052604081208054349290610919908490610ee2565b909155505060405134815233907f5c963fd7fde519af29d56159e6e3e18db4e5d3e4716c39c87958cf9e4862ed589060200160405180910390a2565b6000546001600160a01b031633148061097857506001546001600160a01b031633145b6109c45760405162461bcd60e51b815260206004820181905260248201527f4f6e6c7920706c61796572732063616e2063616e63656c207468652067616d656044820152606401610432565b60075460ff16610a085760405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b6044820152606401610432565b6006544210610a1957610728610783565b610a4d6040518060400160405280601381526020017221b0b731b2b63632b210313c90383630bcb2b960691b815250610d51565b565b6000546001600160a01b0316331480610a7257506001546001600160a01b031633145b610abe5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920706c61796572732063616e207374617274207468652067616d65006044820152606401610432565b60075460ff1615610b075760405162461bcd60e51b815260206004820152601360248201527247616d6520616c72656164792061637469766560681b6044820152606401610432565b60008160ff16118015610b1e575060078160ff1611155b610b785760405162461bcd60e51b815260206004820152602560248201527f4475726174696f6e206d757374206265206265747765656e203120616e642037604482015264206461797360d81b6064820152608401610432565b600254600080546001600160a01b03168152600860205260409020541015610bee5760405162461bcd60e51b8152602060048201526024808201527f506c6179657231206e6565647320746f2066756e64207468652067616d6520666044820152631a5c9cdd60e21b6064820152608401610432565b6002546001546001600160a01b03166000908152600860205260409020541015610c665760405162461bcd60e51b8152602060048201526024808201527f506c6179657232206e6565647320746f2066756e64207468652067616d6520666044820152631a5c9cdd60e21b6064820152608401610432565b610c7660ff821662015180610ef5565b610c859062ffffff1642610ee2565b600655600254600080546001600160a01b031681526008602052604081208054909190610cb3908490610ec9565b90915550506002546001546001600160a01b031660009081526008602052604081208054909190610ce5908490610ec9565b90915550506007805460ff199081166001179091556005805490911690556000600455600654600280547fa2dfaa3573b86004ec9d4d4abe5068d942579c59da4da8cd0d9e45e71a393bc19291610d3c9190610f1c565b6040805192835260208301919091520161071f565b600254600080546001600160a01b031681526008602052604081208054909190610d7c908490610ee2565b90915550506002546001546001600160a01b031660009081526008602052604081208054909190610dae908490610ee2565b90915550506005805460ff199081169091556007805490911690556040517f985aff3c1bcdc2e2f163f9fdee244174eaf8a22083f747991a006056c74d7d2e9061071f908390610e42565b600060208284031215610e0b57600080fd5b81356001600160a01b0381168114610e2257600080fd5b9392505050565b600060208284031215610e3b57600080fd5b5035919050565b600060208083528351808285015260005b81811015610e6f57858101830151858201604001528201610e53565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215610ea257600080fd5b813560ff81168114610e2257600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610edc57610edc610eb3565b92915050565b80820180821115610edc57610edc610eb3565b62ffffff818116838216028082169190828114610f1457610f14610eb3565b505092915050565b8082028115828204841417610edc57610edc610eb356fe47616d6520706572696f6420656e6465642c20726561647920666f7220726573756c742070726f63657373696e6747616d652063616e63656c6c65643a20696e73756666696369656e7420636f6d6d6974746565206d656d6265727347616d65206163746976653a2077616974696e6720666f7220636f6d6d6974746565206d656d6265727347616d65206163746976653a206d696e696d756d20636f6d6d6974746565206d6574a2646970667358221220e417a568a1982f622d75601f08c923dba7afa6ec2b63cd5fd8939a35b69e8c0c64736f6c63430008140033";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _player1: AddressLike,
    _player2: AddressLike,
    _betAmount: BigNumberish,
    _minimumCommittee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _player1,
      _player2,
      _betAmount,
      _minimumCommittee,
      overrides || {}
    );
  }
  override deploy(
    _player1: AddressLike,
    _player2: AddressLike,
    _betAmount: BigNumberish,
    _minimumCommittee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _player1,
      _player2,
      _betAmount,
      _minimumCommittee,
      overrides || {}
    ) as Promise<
      Faucet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Faucet__factory {
    return super.connect(runner) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Faucet {
    return new Contract(address, _abi, runner) as unknown as Faucet;
  }
}
